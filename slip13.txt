1.
#include <stdio.h>

int matrixChainOrder(int p[], int n) 
{
    int m[n][n]; 
    int l,i,j,k,q;

    for (int i = 1; i < n; i++)
        m[i][i] = 0;

    for (l = 2; l < n; l++) 
    {
        for (i = 1; i < n - l + 1; i++) 
        {
            j = i + l - 1;
            m[i][j] = 9999;

            for (k = i; k < j; k++) 
            {
                q = m[i][k] + m[k+1][j] + p[i-1]*p[k]*p[j];
                if (q < m[i][j])
                    m[i][j] = q;
            }
        }
    }

    return m[1][n-1];
}

int main() 
{
    int arr[] = {40, 20, 30, 10, 30}; 
    int size = sizeof(arr)/sizeof(arr[0]);

    printf("\n Minimum number of multiplications is %d", matrixChainOrder(arr, size));

    return 0;
}
2.
