#include<stdio.h>
#include<conio.h>

#define MAX 100

struct emp
{
	int eid,age;
	char ename[20];
}e[10];

void insertionsort(struct emp e[],int n)
{
	int i,temp,j=1,k;
	struct emp t;

	while(j<n)
	{
		i = j-1;
		temp = e[j].age;
		t = e[j];

		while(e[i].age > temp && i!=-1)
		{
			e[i+1] =  e[i];
			i--;
		}
		e[i+1] = t;
		j++;

		//display(arr,n);
	}

	for(k=0;k<n;k++)
	{
		printf("\n %d %s %d",e[k].eid,e[k].ename,e[k].age);
	}
}

void main()
{
	FILE *fp;
	int i=0;

	clrscr();

	fp = fopen("emp.txt","r");

	while((fscanf(fp,"%d%s%d",&e[i].eid,e[i].ename,&e[i].age))!=EOF)
	{
		printf("\n %d %s %d",e[i].eid,e[i].ename,e[i].age);
		i++;
	}

	printf("\n\n Sorted Data \n");

	insertionsort(e,i);

	getch();
}
2.#include <stdio.h>

int visited[10] = {0};
int queue[10], front = 0, rear = 0;

void bfs(int g[10][10], int n, int start)
{
    int i;
    
    visited[start] = 1;
    queue[rear++] = start;

    while (front < rear)
    {
        int current = queue[front++];
        printf("%d\t", current);

        for (i = 0; i < n; i++)
        {
            if (g[current][i]==1 && visited[i]==0)
            {
                queue[rear++] = i;
                visited[i] = 1;
            }
        }
    }
}

int main()
{
    int g[10][10], n, i, j, start;

    printf("\nEnter the number of nodes: ");
    scanf("%d", &n);

    printf("\nEnter the adjacency matrix:\n");
    for (i = 0; i < n; i++)
    {
        for (j = 0; j < n; j++)
        {
            scanf("%d", &g[i][j]);
        }
    }

    printf("\nEnter the starting node (0 to %d): ", n - 1);
    scanf("%d", &start);

    printf("\nBFS traversal: ");
    bfs(g, n, start);

    return 0;
}
#include <stdio.h>

int visited[10] = {0};

void dfs(int g[10][10], int n, int v) 
{
    int i;

    visited[v] = 1;
    printf("%d\t", v);  

    for (i = 0; i < n; i++) 
    {
        if (g[v][i] == 1 && visited[i] == 0) 
        {
            dfs(g, n, i);
        }
    }
}

int main() 
{
    int g[10][10], n, i, j, start;

    printf("\nEnter the number of nodes: ");
    scanf("%d", &n);

    printf("\nEnter the adjacency matrix:\n");
    for (i = 0; i < n; i++) 
    {
        for (j = 0; j < n; j++) 
        {
            scanf("%d", &g[i][j]);
        }
    }

    printf("\nEnter the starting node (0 to %d): ", n - 1);
    scanf("%d", &start);

    printf("\n DFS traversal: ");
    
	dfs(g, n, start);
	
    return 0;
}

