1.
#include <stdio.h>  

void heapify(int a[], int n, int i)  
{  
    int largest = i; 
    int left = 2*i+1; 
    int right = 2*i+2; 
    int temp;
    
    if (left < n && a[left] > a[largest])  
        largest = left;  
    
    if (right < n && a[right] > a[largest])  
        largest = right;  
    
    if (largest != i) 
	{   
        temp = a[i];  
        a[i] = a[largest];  
        a[largest] = temp;  
          
        heapify(a, n, largest);  
    }  
}  

void heapSort(int a[], int n)  
{  
	int i,temp;
	
    for(i=n/2-1;i>=0;i--)  
        heapify(a,n,i);  
    
    for(i=n-1;i>=0;i--) 
	{  
        temp = a[0];  
        a[0] = a[i];  
        a[i] = temp;  
          
        heapify(a, i, 0);  
    }  
}  

void printArr(int arr[], int n)  
{  
	int i;
	
    for(i=0;i<n;i++)  
    {  
        printf(" %d ", arr[i]); 
    }           
}  

int main()  
{  
    int a[100],n,i;
	
	printf("\n Enter No. of Elements : ");
	scanf("%d",&n);
	
	printf("\n Enter %d Elements : ",n);
	for(i=0;i<n;i++)
	{
		scanf("%d",&a[i]);
	}  
    
    printf("\n Before sorting array elements are : ");  
    printArr(a, n);  
    
    heapSort(a, n); 
	 
    printf("\n After sorting array elements are : ");    
    printArr(a, n);  
    
    return 0;  
}  
2.
#include <stdio.h>

void strassen(int A[2][2], int B[2][2], int C[2][2]) 
{
    int M1, M2, M3, M4, M5, M6, M7;
    int a = A[0][0], b = A[0][1], c = A[1][0], d = A[1][1];
    int e = B[0][0], f = B[0][1], g = B[1][0], h = B[1][1];

    M1 = (a + d) * (e + h);
    M2 = (c + d) * e;
    M3 = a * (f - h);
    M4 = d * (g - e);
    M5 = (a + b) * h;
    M6 = (c - a) * (e + f);
    M7 = (b - d) * (g + h);

    C[0][0] = M1 + M4 - M5 + M7;
    C[0][1] = M3 + M5;
    C[1][0] = M2 + M4;
    C[1][1] = M1 - M2 + M3 + M6;
}

int main() 
{
    int mat1[2][2], mat2[2][2], mat3[2][2];
    int i, j;

    printf("\n Enter elements of Matrix A (2x2) : ");
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 2; j++)
        {
            scanf("%d", &mat1[i][j]);
        }
    }

    printf("\n Enter elements of Matrix B (2x2) : ");
    for (i = 0; i < 2; i++)
    {
        for (j = 0; j < 2; j++)
        {
            scanf("%d", &mat2[i][j]);
        }
    }

    strassen(mat1, mat2, mat3);

    printf("\n Result : ");
    for (i = 0; i < 2; i++) 
    {
        printf("\n");
        for (j = 0; j < 2; j++)
        {
            printf("%d\t", C[i][j]);
        }
    }

    return 0;
}

